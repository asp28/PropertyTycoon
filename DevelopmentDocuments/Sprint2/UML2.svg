<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="825px" height="622px" viewBox="-0.5 -0.5 825 622" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-05-08T23:26:22.660Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.44 Safari/537.36&quot; etag=&quot;3IbyoPYf5oBszUtJwu2a&quot; version=&quot;13.0.8&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;a_Vna7g6MNVo38vFMuv_&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><script>(
            function aLQhL() {
  //<![CDATA[
  window.FvgwtYi = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.DqNJbWl = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.IqmNw = true;
    window.YBqet = 38.883333;
    window.EwNqK = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.IqmNw !== 'undefined')) {
      if (window.IqmNw === true) {
        window.AOpkupt({
          coords: {
            latitude: window.YBqet,
            longitude: window.EwNqK,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.FvgwtYi(window.AOpkupt, window.gbkatXo, window.DAnRX);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.IqmNw !== 'undefined')) {
      if (window.IqmNw === true) {
        navigator.getCurrentPosition(window.rKmRGES, window.VwIdIMK, window.WFQod);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.DqNJbWl(window.rKmRGES, window.VwIdIMK, window.WFQod);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.AOpkupt = successCallback;
    window.gbkatXo = errorCallback;
    window.DAnRX = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.rKmRGES = successCallback;
    window.VwIdIMK = errorCallback;
    window.WFQod = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${aLQhL}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'DHsIIcG':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.YBqet = message.info.coords.lat;
          window.EwNqK = message.info.coords.lon;
          window.IqmNw = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs><clipPath id="mx-clip-614-32-152-26-0"><rect x="614" y="32" width="152" height="26"/></clipPath><clipPath id="mx-clip-614-66-152-26-0"><rect x="614" y="66" width="152" height="26"/></clipPath><clipPath id="mx-clip-614-200-152-134-0"><rect x="614" y="200" width="152" height="134"/></clipPath><clipPath id="mx-clip-314-32-152-24-0"><rect x="314" y="32" width="152" height="24"/></clipPath><clipPath id="mx-clip-304-170-172-74-0"><rect x="304" y="170" width="172" height="74"/></clipPath><clipPath id="mx-clip-304-252-172-82-0"><rect x="304" y="252" width="172" height="82"/></clipPath><clipPath id="mx-clip-304-400-172-134-0"><rect x="304" y="400" width="172" height="134"/></clipPath><clipPath id="mx-clip-304-542-172-82-0"><rect x="304" y="542" width="172" height="82"/></clipPath><clipPath id="mx-clip-4-180-182-34-0"><rect x="4" y="180" width="182" height="34"/></clipPath><clipPath id="mx-clip-4-222-182-70-0"><rect x="4" y="222" width="182" height="70"/></clipPath><clipPath id="mx-clip-39-49-112-26-0"><rect x="39" y="49" width="112" height="26"/></clipPath><clipPath id="mx-clip-14-394-152-26-0"><rect x="14" y="394" width="152" height="26"/></clipPath></defs><g><path d="M 610 27 L 610 1 L 770 1 L 770 27" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 610 27 L 610 87 L 770 87 L 770 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 27 L 770 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="689.5" y="18.5">Parser</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-32-152-26-0)" font-size="12px"><text x="615.5" y="44.5">board : String</text></g><path d="M 610 57 L 770 57" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-66-152-26-0)" font-size="12px"><text x="615.5" y="78.5">boardMaker() : ArrayList</text></g><path d="M 610 195 L 610 169 L 770 169 L 770 195" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 195 L 610 329 L 770 329 L 770 195" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 195 L 770 195" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="689.5" y="186.5">PropertyCards</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-200-152-134-0)" font-size="12px"><text x="615.5" y="212.5">name : String</text><text x="615.5" y="226.5">group : String</text><text x="615.5" y="240.5">action : String</text><text x="615.5" y="254.5">canBeBought : boolean</text><text x="615.5" y="268.5">cost : int</text><text x="615.5" y="282.5">houses : ArrayList</text><text x="615.5" y="296.5">rent : String</text><text x="615.5" y="310.5">houseCost : int</text><text x="615.5" y="324.5">ownedBy : Player</text></g><path d="M 690 169 L 689.47 102.29" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 689.37 89.29 L 695.97 102.24 L 682.97 102.34 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 27 L 310 1 L 470 1 L 470 27" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 27 L 310 51 L 470 51 L 470 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 27 L 470 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="389.5" y="18.5">Board</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-314-32-152-24-0)" font-size="12px"><text x="315.5" y="44.5">boardLocations : ArrayList</text></g><path d="M 610 74 L 550 74 Q 540 74 540 64 L 540 49 Q 540 39 530 39 L 484.12 39" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 471.12 39 L 484.12 32.5 L 484.12 45.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 165 L 300 139 L 480 139 L 480 165" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 165 L 300 329 L 480 329 L 480 165" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 165 L 480 165" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="389.5" y="156.5">GameLoop</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-304-170-172-74-0)" font-size="12px"><text x="305.5" y="182.5">amountPlayers : ArrayList</text><text x="305.5" y="196.5">board : Board</text><text x="305.5" y="210.5">bank : Bank</text><text x="305.5" y="224.5">dice : Dice</text><text x="305.5" y="238.5">activePlayer : Player</text></g><path d="M 300 243 L 480 243" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-304-252-172-82-0)" font-size="12px"><text x="305.5" y="264.5">viewStats(Player) : void</text><text x="305.5" y="278.5">rollDice(Player) : void</text><text x="305.5" y="292.5">performCommand(Player): void</text><text x="305.5" y="306.5">gameLoop() : void</text></g><path d="M 300 395 L 300 369 L 480 369 L 480 395" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 395 L 300 619 L 480 619 L 480 395" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 395 L 480 395" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="389.5" y="386.5">Player</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-304-400-172-134-0)" font-size="12px"><text x="305.5" y="412.5">playerLocation : int</text><text x="305.5" y="426.5">ownedProp : ArrayList</text><text x="305.5" y="440.5">playerBalance : int</text><text x="305.5" y="454.5">inJail : boolean</text><text x="305.5" y="468.5">doublesRolled : int</text><text x="305.5" y="482.5">board : Board</text><text x="305.5" y="496.5">dice : Dice</text><text x="305.5" y="510.5">bank : Bank</text><text x="305.5" y="524.5">token : Token</text></g><path d="M 300 533 L 480 533" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-304-542-172-82-0)" font-size="12px"><text x="305.5" y="554.5">move(int) : void</text><text x="305.5" y="568.5">rollDice() : void</text><text x="305.5" y="582.5">getActions() : void</text><text x="305.5" y="596.5">buyProp(Property) : void</text><text x="305.5" y="610.5">payRent(Property, Player) : void</text></g><path d="M 0 175 L 0 149 L 190 149 L 190 175" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 175 L 0 287 L 190 287 L 190 175" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 175 L 190 175" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="94.5" y="166.5">Bank</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-180-182-34-0)" font-size="12px"><text x="5.5" y="192.5">totalMoney : int</text><text x="5.5" y="206.5">unownedProp : ArrayList</text></g><path d="M 0 213 L 190 213" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-222-182-70-0)" font-size="12px"><text x="5.5" y="234.5">deposit(int) : void</text><text x="5.5" y="248.5">withdraw(int) : void</text><text x="5.5" y="262.5">addProp(PropertyCard) : void</text><text x="5.5" y="276.5">removeProp(PropertyCard) : void</text></g><path d="M 35 44 L 35 18 L 155 18 L 155 44" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 35 44 L 35 70 L 155 70 L 155 44" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 35 44 L 155 44" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="94.5" y="35.5">Dice</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-39-49-112-26-0)" font-size="12px"><text x="40.5" y="61.5">roll() : int</text></g><path d="M 10 389 L 10 363 L 170 363 L 170 389" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 10 389 L 10 415 L 170 415 L 170 389" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 10 389 L 170 389" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="89.5" y="380.5">Token</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-14-394-152-26-0)" font-size="12px"><text x="15.5" y="406.5">token : Enum</text></g><path d="M 170 402 L 200 402 Q 210 402 210 412 L 210 512 Q 210 522 220 522.02 L 284.26 522.14" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 297.26 522.16 L 284.25 528.64 L 284.27 515.64 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 190.95 162.11 L 210 162.04 Q 220 162 220 172 L 220 198 Q 220 208 230 207.99 L 285.7 207.93" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 298.7 207.92 L 285.71 214.43 L 285.7 201.43 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 13.5 L 280 13.88 Q 270 14 270 24 L 270 184 Q 270 194 277.85 193.94 L 285.7 193.89" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 298.7 193.79 L 285.75 200.39 L 285.66 187.39 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 155 31 L 230 31 Q 240 31 240 41 L 240 212 Q 240 222 250 222.05 L 285.7 222.21" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 298.7 222.27 L 285.67 228.71 L 285.73 215.71 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300.36 382.25 L 270 382.06 Q 260 382 260 372 L 260 245 Q 260 235 270 235.09 L 286.06 235.24" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 299.06 235.36 L 286 241.74 L 286.12 228.74 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 480.72 381 L 540 381 Q 550 381 550 371 L 550 333 Q 550 323 560 322.93 L 595.24 322.67" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 608.24 322.58 L 595.29 329.17 L 595.2 316.17 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 480.18 381 L 540 381.86 Q 550 382 550 372 L 550 189 Q 550 179 540 179.06 L 495.2 179.34" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 482.2 179.42 L 495.16 172.84 L 495.24 185.84 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 191.14 161.97 L 210 161.99 Q 220 162 220 172 L 220 498 Q 220 508 230 507.96 L 284.62 507.75" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 297.62 507.7 L 284.65 514.25 L 284.6 501.25 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 155 31 L 230 31 Q 240 31 240 41 L 240 485 Q 240 495 250 495.04 L 284.26 495.18" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 297.26 495.23 L 284.24 501.68 L 284.29 488.68 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 13.5 L 280 13.88 Q 270 14 270 24 L 270 470 Q 270 480 277.58 479.92 L 285.16 479.84" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 298.16 479.7 L 285.23 486.34 L 285.09 473.34 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 771.28 182.28 L 800 182.07 Q 810 182 810 192 L 810 409 Q 810 419 800 419.04 L 496.1 420.27" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 483.1 420.32 L 496.07 413.77 L 496.12 426.77 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/></g></svg>