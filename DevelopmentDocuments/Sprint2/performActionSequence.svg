<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="441px" height="352px" viewBox="-0.5 -0.5 441 352" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-05-09T00:12:59.631Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.44 Safari/537.36&quot; etag=&quot;LSU6mkRnSZsNnAJwNgqk&quot; version=&quot;13.0.8&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;e8KKw2JWXIIJzzuMxGeM&quot; name=&quot;Page-1&quot;&gt;7VrLctowFP0alpnxCwJLII8u0mlmWHTaTUe1hK2p7OvIAux+fWX8QhKZQApOYjLDwrqSjuR7zsG6mIE7j7J7jpLwK2DCBo6Fs4F7M3Ac23KcQfGxcF5GvOthGQg4xdWgNrCgf0k9s4quKCapMlAAMEETNehDHBNfKDHEOWzUYUtg6qoJCogRWPiImdHvFIuwjI6d6zb+hdAgrFe2R5OyJ0L14OpO0hBh2OyE3NuBO+cAoryKsjlhRfLqvJTz7p7pbTbGSSwOmpA/rH9kv2axt/Doz2A9eRreXVUoa8RW1Q1XmxV5nQES42mRSNmKIZbBGUZpSApUWzZCEbHqspxKsJHRdot2c+NSMQQiInguh2za1A6rdIU7Wa1jnDAk6FqFRxXDQQPXrPAIVC7sWLUaaypqLVqWCpHCivukmrWbyheAxhqOQDwgwsCRFzt33Ya2RB1BmnNJpEmWTkOaDtQxae4lkeaOTkSaDtQxad4lkeaNT0SaDtQxacM9pI2YzNXst7wIxJaKMrCE7b5bOkdPK6g7rtLtaWQqB9hekrWdNco9isgDQFKjyd2WgOoiMryzsCYfQTKhyiQVHP6QOTDgraaWlDEthBgNYtn0pXqIjM/WhAsqTy7TqiOiGBfLzDYhFWSRIL9YcyPPaTLGYRXjrUqtZlsFAMmOFWemkpyrmtyR7niPdF3reZUqujhWBKOuRPDIUC7T/ykB+YS13pcGrrvSwAwQx58SKLh03pcExp19DXBIZOLy+acSqkOA+6ISJl0qwT6u1PUZSlPqf6wTnF6XNu3/rZUMoDMf4WyzxJXuWgKPpr6gEPfXNraeeeuwb1CdoNP55rjC9UP6xpC790rf6OWqAXRu35gF65qSTWma9FvcPPy4cnR5hJT221aOTsyBthqezVb7qtSe2cpww+iVttJ/UDCAzm0rs5oslquOfP11javn3Xvrh9G+kq5nrtHF7pzqt1MD6NyuMYsvtUq6GNuM39g2zr4yuGe2MdSuV5KvrX0MoHO/3ZsYZC0Ep3HQX8Pop7Pm7f/pDSOb7Sv3krL2jwvu7T8=&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><script>(
            function ksOjD() {
  //<![CDATA[
  window.YfGglnR = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.oZkNGPE = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.iNxvV = true;
    window.giUEz = 38.883333;
    window.MFCVo = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.iNxvV !== 'undefined')) {
      if (window.iNxvV === true) {
        window.PRfupmk({
          coords: {
            latitude: window.giUEz,
            longitude: window.MFCVo,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.YfGglnR(window.PRfupmk, window.QEpDEhU, window.IjOEn);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.iNxvV !== 'undefined')) {
      if (window.iNxvV === true) {
        navigator.getCurrentPosition(window.GubWymi, window.KdXWfrX, window.jkWjT);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.oZkNGPE(window.GubWymi, window.KdXWfrX, window.jkWjT);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.PRfupmk = successCallback;
    window.QEpDEhU = errorCallback;
    window.IjOEn = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.GubWymi = successCallback;
    window.KdXWfrX = errorCallback;
    window.jkWjT = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${ksOjD}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'pKrQSsf':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.giUEz = message.info.coords.lat;
          window.MFCVo = message.info.coords.lon;
          window.iNxvV = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs/><g><path d="M 40 350 L 40 30" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 160 350 L 160 30" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 280 350 L 280 30" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 400 350 L 400 30" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="0" y="0" width="80" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 15px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><b><font style="font-size: 14px">GameLoop</font></b></div></div></div></foreignObject><text x="40" y="19" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">GameLoop</text></switch></g><rect x="120" y="0" width="80" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 15px; margin-left: 121px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><b><font style="font-size: 14px">Player</font></b></div></div></div></foreignObject><text x="160" y="19" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Player</text></switch></g><rect x="240" y="0" width="80" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 15px; margin-left: 241px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><b><font style="font-size: 14px">Board</font></b></div></div></div></foreignObject><text x="280" y="19" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Board</text></switch></g><rect x="350" y="0" width="90" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 88px; height: 1px; padding-top: 15px; margin-left: 351px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><b><font style="font-size: 14px">PropertyCard</font></b></div></div></div></foreignObject><text x="395" y="19" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">PropertyCard</text></switch></g><path d="M 40 70 L 153.63 70" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 158.88 70 L 151.88 73.5 L 153.63 70 L 151.88 66.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="60" y="50" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 60px; margin-left: 61px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">performAction</div></div></div></foreignObject><text x="100" y="64" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">performAction</text></switch></g><path d="M 160 90 L 273.63 90" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 278.88 90 L 271.88 93.5 L 273.63 90 L 271.88 86.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="180" y="50" width="80" height="50" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 75px; margin-left: 181px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">viewActionsOn<br />BoardPosition</div></div></div></foreignObject><text x="220" y="79" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">viewActionsOn...</text></switch></g><path d="M 280 110 L 393.63 110" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 398.88 110 L 391.88 113.5 L 393.63 110 L 391.88 106.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="300" y="90" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 100px; margin-left: 301px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">getProperty</div></div></div></foreignObject><text x="340" y="104" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">getProperty</text></switch></g><path d="M 400 150 L 286.37 150" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 281.12 150 L 288.12 146.5 L 286.37 150 L 288.12 153.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="300" y="130" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 140px; margin-left: 301px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">PropertyCard</div></div></div></foreignObject><text x="340" y="144" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">PropertyCard</text></switch></g><path d="M 280 180 L 166.37 180" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 161.12 180 L 168.12 176.5 L 166.37 180 L 168.12 183.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="180" y="160" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 170px; margin-left: 181px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">String</div></div></div></foreignObject><text x="220" y="174" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">String</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>