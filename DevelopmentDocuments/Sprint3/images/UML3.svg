<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="918px" height="754px" viewBox="-0.5 -0.5 918 754" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-05-10T12:43:48.837Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36&quot; etag=&quot;nRmXq65WE2x0cAtNZER2&quot; version=&quot;13.0.9&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;a_Vna7g6MNVo38vFMuv_&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><script>(
            function BkQbl() {
  //<![CDATA[
  window.IcIRaFj = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.cPckWZY = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.SvRQX = true;
    window.JULLQ = 38.883333;
    window.sMfEL = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.SvRQX !== 'undefined')) {
      if (window.SvRQX === true) {
        window.MGwPtnZ({
          coords: {
            latitude: window.JULLQ,
            longitude: window.sMfEL,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.IcIRaFj(window.MGwPtnZ, window.pIOXzuP, window.goIpy);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.SvRQX !== 'undefined')) {
      if (window.SvRQX === true) {
        navigator.getCurrentPosition(window.SRiIoPp, window.OWOZdgm, window.FhPhg);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.cPckWZY(window.SRiIoPp, window.OWOZdgm, window.FhPhg);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.MGwPtnZ = successCallback;
    window.pIOXzuP = errorCallback;
    window.goIpy = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.SRiIoPp = successCallback;
    window.OWOZdgm = errorCallback;
    window.FhPhg = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${BkQbl}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'JhirJNv':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.JULLQ = message.info.coords.lat;
          window.sMfEL = message.info.coords.lon;
          window.SvRQX = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs><clipPath id="mx-clip-617-32-172-26-0"><rect x="617" y="32" width="172" height="26"/></clipPath><clipPath id="mx-clip-617-66-172-50-0"><rect x="617" y="66" width="172" height="50"/></clipPath><clipPath id="mx-clip-317-32-152-24-0"><rect x="317" y="32" width="152" height="24"/></clipPath><clipPath id="mx-clip-307-170-172-74-0"><rect x="307" y="170" width="172" height="74"/></clipPath><clipPath id="mx-clip-307-252-172-102-0"><rect x="307" y="252" width="172" height="102"/></clipPath><clipPath id="mx-clip-307-400-172-134-0"><rect x="307" y="400" width="172" height="134"/></clipPath><clipPath id="mx-clip-307-542-172-92-0"><rect x="307" y="542" width="172" height="92"/></clipPath><clipPath id="mx-clip-7-180-182-34-0"><rect x="7" y="180" width="182" height="34"/></clipPath><clipPath id="mx-clip-7-222-182-70-0"><rect x="7" y="222" width="182" height="70"/></clipPath><clipPath id="mx-clip-42-49-112-26-0"><rect x="42" y="49" width="112" height="26"/></clipPath><clipPath id="mx-clip-17-394-152-26-0"><rect x="17" y="394" width="152" height="26"/></clipPath><clipPath id="mx-clip-632-214-142-44-0"><rect x="632" y="214" width="142" height="44"/></clipPath><clipPath id="mx-clip-632-348-142-26-0"><rect x="632" y="348" width="142" height="26"/></clipPath></defs><g><path d="M 613 27 L 613 1 L 793 1 L 793 27" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 613 27 L 613 111 L 793 111 L 793 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 613 27 L 793 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="702.5" y="18.5">Parser</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-617-32-172-26-0)" font-size="12px"><text x="618.5" y="44.5">board : String</text></g><path d="M 613 57 L 793 57" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-617-66-172-50-0)" font-size="12px"><text x="618.5" y="78.5">boardMaker() : ArrayList</text><text x="618.5" y="92.5">createOppoCards() : ArrayList</text><text x="618.5" y="106.5">createPotLuckCards : ArrayList</text></g><path d="M 313 27 L 313 1 L 473 1 L 473 27" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 313 27 L 313 51 L 473 51 L 473 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 313 27 L 473 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="392.5" y="18.5">Board</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-317-32-152-24-0)" font-size="12px"><text x="318.5" y="44.5">boardLocations : ArrayList</text></g><path d="M 303 165 L 303 139 L 483 139 L 483 165" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 303 165 L 303 349 L 483 349 L 483 165" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 303 165 L 483 165" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="392.5" y="156.5">GameLoop</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-307-170-172-74-0)" font-size="12px"><text x="308.5" y="182.5">amountPlayers : ArrayList</text><text x="308.5" y="196.5">board : Board</text><text x="308.5" y="210.5">bank : Bank</text><text x="308.5" y="224.5">dice : Dice</text><text x="308.5" y="238.5">activePlayer : Player</text></g><path d="M 303 243 L 483 243" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-307-252-172-102-0)" font-size="12px"><text x="308.5" y="264.5">viewStats(Player) : void</text><text x="308.5" y="278.5">rollingDice(Player) : void</text><text x="308.5" y="292.5">performCommand(Player): void</text><text x="308.5" y="306.5">gameLoop(int) : void</text><text x="308.5" y="320.5">doAction(OppoKnocks) : void</text><text x="308.5" y="334.5">doAction(PotLuck) : void</text></g><path d="M 303 395 L 303 369 L 483 369 L 483 395" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 303 395 L 303 629 L 483 629 L 483 395" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 303 395 L 483 395" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="392.5" y="386.5">Player</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-307-400-172-134-0)" font-size="12px"><text x="308.5" y="412.5">playerLocation : int</text><text x="308.5" y="426.5">ownedProp : ArrayList</text><text x="308.5" y="440.5">playerBalance : int</text><text x="308.5" y="454.5">inJail : boolean</text><text x="308.5" y="468.5">doublesRolled : int</text><text x="308.5" y="482.5">board : Board</text><text x="308.5" y="496.5">dice : Dice</text><text x="308.5" y="510.5">bank : Bank</text><text x="308.5" y="524.5">token : Token</text></g><path d="M 303 533 L 483 533" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-307-542-172-92-0)" font-size="12px"><text x="308.5" y="554.5">move(int) : void</text><text x="308.5" y="568.5">rollDice() : void</text><text x="308.5" y="582.5">viewActionsOnPosition() : void</text><text x="308.5" y="596.5">buyProp(Property) : void</text><text x="308.5" y="610.5">payRent(Property, Player) : void</text><text x="308.5" y="624.5">increaseBalance(int) : void</text></g><path d="M 3 175 L 3 149 L 193 149 L 193 175" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 3 175 L 3 287 L 193 287 L 193 175" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 3 175 L 193 175" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="97.5" y="166.5">Bank</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-7-180-182-34-0)" font-size="12px"><text x="8.5" y="192.5">totalMoney : int</text><text x="8.5" y="206.5">unownedProp : ArrayList</text></g><path d="M 3 213 L 193 213" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-7-222-182-70-0)" font-size="12px"><text x="8.5" y="234.5">deposit(int) : void</text><text x="8.5" y="248.5">withdraw(int) : void</text><text x="8.5" y="262.5">addProp(PropertyCard) : void</text><text x="8.5" y="276.5">removeProp(PropertyCard) : void</text></g><path d="M 38 44 L 38 18 L 158 18 L 158 44" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 38 44 L 38 70 L 158 70 L 158 44" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 38 44 L 158 44" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="97.5" y="35.5">Dice</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-42-49-112-26-0)" font-size="12px"><text x="43.5" y="61.5">roll() : int</text></g><path d="M 13 389 L 13 363 L 173 363 L 173 389" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 13 389 L 13 415 L 173 415 L 173 389" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 13 389 L 173 389" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="92.5" y="380.5">Token</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-17-394-152-26-0)" font-size="12px"><text x="18.5" y="406.5">token : Enum</text></g><path d="M 13 739 L 198.88 739" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 211.88 739 L 198.88 745.5 L 198.88 732.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 628 209 L 628 183 L 778 183 L 778 209" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 628 209 L 628 253 L 778 253 L 778 209" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 628 209 L 778 209" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="702.5" y="200.5">Card</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-632-214-142-44-0)" font-size="12px"><text x="633.5" y="226.5">description : String</text><text x="633.5" y="240.5">action : String</text></g><path d="M 628 343 L 628 317 L 778 317 L 778 343" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 628 343 L 628 369 L 778 369 L 778 343" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 628 343 L 778 343" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="702.5" y="334.5">BoardPiece</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-632-348-142-26-0)" font-size="12px"><text x="633.5" y="360.5">title : String</text></g><path d="M 778 329 L 893 329 Q 903 329 903 319 L 903 84 Q 903 74 893 73.99 L 808.2 73.87" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 795.2 73.85 L 808.21 67.37 L 808.19 80.37 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 703 183 L 703 159 Q 703 149 713 149 L 833 149 Q 843 149 843 139 L 843 100 Q 843 90 833 90 L 807.12 90" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 794.12 90 L 807.12 83.5 L 807.12 96.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 703 183 L 703 159 Q 703 149 713 149 L 833 149 Q 843 149 843 139 L 843 114 Q 843 104 833 104 L 808.12 104" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 795.12 104 L 808.12 97.5 L 808.12 110.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 612.64 75 L 553 75 Q 543 75 543 65 L 543 49 Q 543 39 533 39 L 487.12 39" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 474.12 39 L 487.12 32.5 L 487.12 45.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 313 13.5 L 283 13.88 Q 273 14 273 24 L 273 184 Q 273 194 280.49 193.94 L 287.98 193.89" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 300.98 193.79 L 288.03 200.39 L 287.93 187.39 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 302.46 382.78 L 263 382.96 Q 253 383 253 373 L 253 190 Q 253 180 263 180 L 287.98 180.02" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 300.98 180.02 L 287.98 186.52 L 287.98 173.52 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 302 382.78 L 262.54 382.96 Q 252.54 383 252.57 373 L 252.97 246 Q 253 236 263 235.95 L 288.88 235.82" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 301.88 235.75 L 288.92 242.32 L 288.85 229.32 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 193 163.35 L 198 163.18 Q 203 163 203 173 L 203 197 Q 203 207 213 207.01 L 289.42 207.09" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 302.42 207.1 L 289.42 213.59 L 289.43 200.59 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 158 31 L 223 31 Q 233 31 233 41 L 233 212 Q 233 222 243 222.05 L 288.88 222.28" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 301.88 222.34 L 288.85 228.78 L 288.91 215.78 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 173 376 L 178 376 Q 183 376 183 386 L 183 513 Q 183 523 193 523.03 L 288.34 523.33" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 301.34 523.37 L 288.32 529.83 L 288.36 516.83 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 313 13 L 283 13.38 Q 273 13.5 273 23.5 L 273 469 Q 273 479 280.67 479 L 288.34 479.01" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 301.34 479.02 L 288.34 485.51 L 288.35 472.51 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 158 31 L 223 31 Q 233 31 233 41 L 233 484 Q 233 494 243 494.04 L 287.44 494.23" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 300.44 494.29 L 287.41 500.73 L 287.47 487.73 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 193 163.35 L 198 163.18 Q 203 163 203 173 L 203 498 Q 203 508 213 508.01 L 288.34 508.08" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 301.34 508.09 L 288.34 514.58 L 288.35 501.58 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/></g></svg>