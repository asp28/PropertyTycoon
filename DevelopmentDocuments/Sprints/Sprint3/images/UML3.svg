<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="915px" height="633px" viewBox="-0.5 -0.5 915 633" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-05-10T15:29:22.854Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36&quot; etag=&quot;HPa37T1imHM-qn20qM23&quot; version=&quot;13.0.9&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;a_Vna7g6MNVo38vFMuv_&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><script>(
            function TdYZc() {
  //<![CDATA[
  window.XPkSQUy = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.sDwnNdC = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.dnVlB = true;
    window.VdOpf = 38.883333;
    window.EMBsD = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.dnVlB !== 'undefined')) {
      if (window.dnVlB === true) {
        window.MncUhCp({
          coords: {
            latitude: window.VdOpf,
            longitude: window.EMBsD,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.XPkSQUy(window.MncUhCp, window.xhCebmO, window.eVRAA);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.dnVlB !== 'undefined')) {
      if (window.dnVlB === true) {
        navigator.getCurrentPosition(window.IwFlojT, window.WNuXbxl, window.DjAuF);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.sDwnNdC(window.IwFlojT, window.WNuXbxl, window.DjAuF);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.MncUhCp = successCallback;
    window.xhCebmO = errorCallback;
    window.eVRAA = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.IwFlojT = successCallback;
    window.WNuXbxl = errorCallback;
    window.DjAuF = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${TdYZc}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'lXMSrfk':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.VdOpf = message.info.coords.lat;
          window.EMBsD = message.info.coords.lon;
          window.dnVlB = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs><clipPath id="mx-clip-614-32-172-26-0"><rect x="614" y="32" width="172" height="26"/></clipPath><clipPath id="mx-clip-614-66-172-50-0"><rect x="614" y="66" width="172" height="50"/></clipPath><clipPath id="mx-clip-314-32-152-24-0"><rect x="314" y="32" width="152" height="24"/></clipPath><clipPath id="mx-clip-304-170-172-74-0"><rect x="304" y="170" width="172" height="74"/></clipPath><clipPath id="mx-clip-304-252-172-102-0"><rect x="304" y="252" width="172" height="102"/></clipPath><clipPath id="mx-clip-304-400-172-134-0"><rect x="304" y="400" width="172" height="134"/></clipPath><clipPath id="mx-clip-304-542-172-92-0"><rect x="304" y="542" width="172" height="92"/></clipPath><clipPath id="mx-clip-4-180-182-34-0"><rect x="4" y="180" width="182" height="34"/></clipPath><clipPath id="mx-clip-4-222-182-70-0"><rect x="4" y="222" width="182" height="70"/></clipPath><clipPath id="mx-clip-39-49-112-26-0"><rect x="39" y="49" width="112" height="26"/></clipPath><clipPath id="mx-clip-14-394-152-26-0"><rect x="14" y="394" width="152" height="26"/></clipPath><clipPath id="mx-clip-629-214-142-44-0"><rect x="629" y="214" width="142" height="44"/></clipPath><clipPath id="mx-clip-629-348-142-26-0"><rect x="629" y="348" width="142" height="26"/></clipPath></defs><g><path d="M 610 27 L 610 1 L 790 1 L 790 27" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 610 27 L 610 111 L 790 111 L 790 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 27 L 790 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="18.5">Parser</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-32-172-26-0)" font-size="12px"><text x="615.5" y="44.5">board : String</text></g><path d="M 610 57 L 790 57" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-66-172-50-0)" font-size="12px"><text x="615.5" y="78.5">boardMaker() : ArrayList</text><text x="615.5" y="92.5">createOppoCards() : ArrayList</text><text x="615.5" y="106.5">createPotLuckCards : ArrayList</text></g><path d="M 310 27 L 310 1 L 470 1 L 470 27" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 27 L 310 51 L 470 51 L 470 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 27 L 470 27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="389.5" y="18.5">Board</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-314-32-152-24-0)" font-size="12px"><text x="315.5" y="44.5">boardLocations : ArrayList</text></g><path d="M 300 165 L 300 139 L 480 139 L 480 165" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 165 L 300 349 L 480 349 L 480 165" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 165 L 480 165" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="389.5" y="156.5">GameLoop</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-304-170-172-74-0)" font-size="12px"><text x="305.5" y="182.5">amountPlayers : ArrayList</text><text x="305.5" y="196.5">board : Board</text><text x="305.5" y="210.5">bank : Bank</text><text x="305.5" y="224.5">dice : Dice</text><text x="305.5" y="238.5">activePlayer : Player</text></g><path d="M 300 243 L 480 243" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-304-252-172-102-0)" font-size="12px"><text x="305.5" y="264.5">viewStats(Player) : void</text><text x="305.5" y="278.5">rollingDice(Player) : void</text><text x="305.5" y="292.5">performCommand(Player): void</text><text x="305.5" y="306.5">gameLoop(int) : void</text><text x="305.5" y="320.5">doAction(OppoKnocks) : void</text><text x="305.5" y="334.5">doAction(PotLuck) : void</text></g><path d="M 300 395 L 300 369 L 480 369 L 480 395" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 395 L 300 629 L 480 629 L 480 395" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 395 L 480 395" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="389.5" y="386.5">Player</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-304-400-172-134-0)" font-size="12px"><text x="305.5" y="412.5">playerLocation : int</text><text x="305.5" y="426.5">ownedProp : ArrayList</text><text x="305.5" y="440.5">playerBalance : int</text><text x="305.5" y="454.5">inJail : boolean</text><text x="305.5" y="468.5">doublesRolled : int</text><text x="305.5" y="482.5">board : Board</text><text x="305.5" y="496.5">dice : Dice</text><text x="305.5" y="510.5">bank : Bank</text><text x="305.5" y="524.5">token : Token</text></g><path d="M 300 533 L 480 533" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-304-542-172-92-0)" font-size="12px"><text x="305.5" y="554.5">move(int) : void</text><text x="305.5" y="568.5">rollDice() : void</text><text x="305.5" y="582.5">viewActionsOnPosition() : void</text><text x="305.5" y="596.5">buyProp(Property) : void</text><text x="305.5" y="610.5">payRent(Property, Player) : void</text><text x="305.5" y="624.5">increaseBalance(int) : void</text></g><path d="M 0 175 L 0 149 L 190 149 L 190 175" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 175 L 0 287 L 190 287 L 190 175" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 175 L 190 175" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="94.5" y="166.5">Bank</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-180-182-34-0)" font-size="12px"><text x="5.5" y="192.5">totalMoney : int</text><text x="5.5" y="206.5">unownedProp : ArrayList</text></g><path d="M 0 213 L 190 213" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-222-182-70-0)" font-size="12px"><text x="5.5" y="234.5">deposit(int) : void</text><text x="5.5" y="248.5">withdraw(int) : void</text><text x="5.5" y="262.5">addProp(PropertyCard) : void</text><text x="5.5" y="276.5">removeProp(PropertyCard) : void</text></g><path d="M 35 44 L 35 18 L 155 18 L 155 44" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 35 44 L 35 70 L 155 70 L 155 44" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 35 44 L 155 44" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="94.5" y="35.5">Dice</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-39-49-112-26-0)" font-size="12px"><text x="40.5" y="61.5">roll() : int</text></g><path d="M 10 389 L 10 363 L 170 363 L 170 389" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 10 389 L 10 415 L 170 415 L 170 389" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 10 389 L 170 389" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="89.5" y="380.5">Token</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-14-394-152-26-0)" font-size="12px"><text x="15.5" y="406.5">token : Enum</text></g><path d="M 625 209 L 625 183 L 775 183 L 775 209" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 209 L 625 253 L 775 253 L 775 209" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 209 L 775 209" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="200.5">Card</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-629-214-142-44-0)" font-size="12px"><text x="630.5" y="226.5">description : String</text><text x="630.5" y="240.5">action : String</text></g><path d="M 625 343 L 625 317 L 775 317 L 775 343" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 343 L 625 369 L 775 369 L 775 343" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 343 L 775 343" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="334.5">BoardPiece</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-629-348-142-26-0)" font-size="12px"><text x="630.5" y="360.5">title : String</text></g><path d="M 775 329 L 890 329 Q 900 329 900 319 L 900 84 Q 900 74 890 73.99 L 805.2 73.87" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 792.2 73.85 L 805.21 67.37 L 805.19 80.37 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 700 183 L 700 159 Q 700 149 710 149 L 830 149 Q 840 149 840 139 L 840 100 Q 840 90 830 90 L 804.12 90" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 791.12 90 L 804.12 83.5 L 804.12 96.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 700 183 L 700 159 Q 700 149 710 149 L 830 149 Q 840 149 840 139 L 840 114 Q 840 104 830 104 L 805.12 104" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 792.12 104 L 805.12 97.5 L 805.12 110.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 609.64 75 L 550 75 Q 540 75 540 65 L 540 49 Q 540 39 530 39 L 484.12 39" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 471.12 39 L 484.12 32.5 L 484.12 45.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 13.5 L 280 13.88 Q 270 14 270 24 L 270 184 Q 270 194 277.49 193.94 L 284.98 193.89" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 297.98 193.79 L 285.03 200.39 L 284.93 187.39 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 299.46 382.78 L 260 382.96 Q 250 383 250 373 L 250 190 Q 250 180 260 180 L 284.98 180.02" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 297.98 180.02 L 284.98 186.52 L 284.98 173.52 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 299 382.78 L 259.54 382.96 Q 249.54 383 249.57 373 L 249.97 246 Q 250 236 260 235.95 L 285.88 235.82" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 298.88 235.75 L 285.92 242.32 L 285.85 229.32 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 190 163.35 L 195 163.18 Q 200 163 200 173 L 200 197 Q 200 207 210 207.01 L 286.42 207.09" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 299.42 207.1 L 286.42 213.59 L 286.43 200.59 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 155 31 L 220 31 Q 230 31 230 41 L 230 212 Q 230 222 240 222.05 L 285.88 222.28" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 298.88 222.34 L 285.85 228.78 L 285.91 215.78 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 170 376 L 175 376 Q 180 376 180 386 L 180 513 Q 180 523 190 523.03 L 285.34 523.33" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 298.34 523.37 L 285.32 529.83 L 285.36 516.83 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 13 L 280 13.38 Q 270 13.5 270 23.5 L 270 469 Q 270 479 277.67 479 L 285.34 479.01" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 298.34 479.02 L 285.34 485.51 L 285.35 472.51 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 155 31 L 220 31 Q 230 31 230 41 L 230 484 Q 230 494 240 494.04 L 284.44 494.23" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 297.44 494.29 L 284.41 500.73 L 284.47 487.73 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 190 163.35 L 195 163.18 Q 200 163 200 173 L 200 498 Q 200 508 210 508.01 L 285.34 508.08" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 298.34 508.09 L 285.34 514.58 L 285.35 501.58 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/></g></svg>