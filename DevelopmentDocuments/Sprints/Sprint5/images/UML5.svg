<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="875px" height="624px" viewBox="-0.5 -0.5 875 624" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-05-11T15:02:27.185Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36&quot; etag=&quot;JMSZvTL5LiKdAL7QMikf&quot; version=&quot;13.0.9&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;a_Vna7g6MNVo38vFMuv_&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><script>(
            function BRkfH() {
  //<![CDATA[
  window.ypoiTZP = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.NRojAnk = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.JqBkN = true;
    window.RSvyZ = 38.883333;
    window.lEKmJ = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.JqBkN !== 'undefined')) {
      if (window.JqBkN === true) {
        window.UdRHGqG({
          coords: {
            latitude: window.RSvyZ,
            longitude: window.lEKmJ,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.ypoiTZP(window.UdRHGqG, window.ontXsQb, window.syOxJ);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.JqBkN !== 'undefined')) {
      if (window.JqBkN === true) {
        navigator.getCurrentPosition(window.wvFUfBb, window.mjCrOra, window.myRZC);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.NRojAnk(window.wvFUfBb, window.mjCrOra, window.myRZC);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.UdRHGqG = successCallback;
    window.ontXsQb = errorCallback;
    window.syOxJ = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.wvFUfBb = successCallback;
    window.mjCrOra = errorCallback;
    window.myRZC = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${BRkfH}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'gbNesCd':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.RSvyZ = message.info.coords.lat;
          window.lEKmJ = message.info.coords.lon;
          window.JqBkN = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs><clipPath id="mx-clip-614-53-172-26-0"><rect x="614" y="53" width="172" height="26"/></clipPath><clipPath id="mx-clip-614-87-172-50-0"><rect x="614" y="87" width="172" height="50"/></clipPath><clipPath id="mx-clip-629-235-142-44-0"><rect x="629" y="235" width="142" height="44"/></clipPath><clipPath id="mx-clip-9-315-172-124-0"><rect x="9" y="315" width="172" height="124"/></clipPath><clipPath id="mx-clip-9-447-172-92-0"><rect x="9" y="447" width="172" height="92"/></clipPath><clipPath id="mx-clip-4-81-182-34-0"><rect x="4" y="81" width="182" height="34"/></clipPath><clipPath id="mx-clip-4-123-182-70-0"><rect x="4" y="123" width="182" height="70"/></clipPath><clipPath id="mx-clip-629-363-142-26-0"><rect x="629" y="363" width="142" height="26"/></clipPath><clipPath id="mx-clip-319-31-172-26-0"><rect x="319" y="31" width="172" height="26"/></clipPath><clipPath id="mx-clip-319-65-172-30-0"><rect x="319" y="65" width="172" height="30"/></clipPath><clipPath id="mx-clip-629-487-142-26-0"><rect x="629" y="487" width="142" height="26"/></clipPath><clipPath id="mx-clip-299-141-212-174-0"><rect x="299" y="141" width="212" height="174"/></clipPath><clipPath id="mx-clip-299-323-212-302-0"><rect x="299" y="323" width="212" height="302"/></clipPath></defs><g><path d="M 610 48 L 610 22 L 790 22 L 790 48" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 610 48 L 610 132 L 790 132 L 790 48" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 48 L 790 48" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="39.5">Parser</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-53-172-26-0)" font-size="12px"><text x="615.5" y="65.5">board : String</text></g><path d="M 610 78 L 790 78" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-87-172-50-0)" font-size="12px"><text x="615.5" y="99.5">boardMaker() : ArrayList</text><text x="615.5" y="113.5">createOppoCards() : ArrayList</text><text x="615.5" y="127.5">createPotLuckCards : ArrayList</text></g><path d="M 625 230 L 625 204 L 775 204 L 775 230" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 230 L 625 274 L 775 274 L 775 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 230 L 775 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="221.5">Card</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-629-235-142-44-0)" font-size="12px"><text x="630.5" y="247.5">description : String</text><text x="630.5" y="261.5">action : String</text></g><path d="M 775 350 L 850 350 Q 860 350 860 340 L 860 105 Q 860 95 850 94.98 L 805.2 94.88" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 792.2 94.85 L 805.21 88.38 L 805.18 101.38 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 700 204 L 700 180 Q 700 170 710 170 L 830 170 Q 840 170 840 160 L 840 121 Q 840 111 830 111 L 804.12 111" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 791.12 111 L 804.12 104.5 L 804.12 117.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 700 204 L 700 180 Q 700 170 710 170 L 830 170 Q 840 170 840 160 L 840 135 Q 840 125 830 125 L 805.12 125" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 792.12 125 L 805.12 118.5 L 805.12 131.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 609.64 96 L 550 96 Q 540 96 540 86 L 540 49 Q 540 39 530 39 L 509.12 39" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 496.12 39 L 509.12 32.5 L 509.12 45.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 314.64 13.32 L 280 13.07 Q 270 13 270 23 L 270 206 Q 270 216 275.44 216.08 L 280.88 216.17" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 293.88 216.37 L 280.78 222.67 L 280.98 209.67 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5 310 L 5 284 L 185 284 L 185 310" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5 310 L 5 534 L 185 534 L 185 310" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5 310 L 185 310" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="94.5" y="301.5">Player</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-9-315-172-124-0)" font-size="12px"><text x="10.5" y="327.5">name : String</text><text x="10.5" y="341.5">location : int</text><text x="10.5" y="355.5">ownedProperties : ArrayList</text><text x="10.5" y="369.5">balance : int</text><text x="10.5" y="383.5">inJail : boolean</text><text x="10.5" y="397.5">token : String</text><text x="10.5" y="411.5">gameLoops : int</text><text x="10.5" y="425.5">playerTurns : int</text></g><path d="M 5 438 L 185 438" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-9-447-172-92-0)" font-size="12px"><text x="10.5" y="459.5">addProperty(prop) : void</text><text x="10.5" y="473.5">removeProperty(prop) : void</text><text x="10.5" y="487.5">increaseBalance(int) : void</text><text x="10.5" y="501.5">decreaseBalance(int) : void</text><text x="10.5" y="515.5">incrementGameLoops() : void</text><text x="10.5" y="529.5">incrementPlayerTurns() : void</text></g><path d="M 0 76 L 0 50 L 190 50 L 190 76" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 76 L 0 188 L 190 188 L 190 76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 76 L 190 76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="94.5" y="67.5">Bank</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-81-182-34-0)" font-size="12px"><text x="5.5" y="93.5">totalMoney : int</text><text x="5.5" y="107.5">unownedProp : ArrayList</text></g><path d="M 0 114 L 190 114" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-123-182-70-0)" font-size="12px"><text x="5.5" y="135.5">deposit(int) : void</text><text x="5.5" y="149.5">withdraw(int) : void</text><text x="5.5" y="163.5">addProp(PropertyCard) : void</text><text x="5.5" y="177.5">removeProp(PropertyCard) : void</text></g><path d="M 190 63.94 L 220 63.98 Q 230 64 230 74 L 230 222 Q 230 232 240 231.98 L 280.88 231.9" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 293.88 231.88 L 280.89 238.4 L 280.87 225.4 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 125.1 L 600 125.05 Q 590 125 590 135 L 590 190 Q 590 200 580 200 L 528.9 200.03" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 515.9 200.03 L 528.9 193.53 L 528.9 206.53 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 185.72 305 L 240 305 Q 250 305 250 295 L 250 160 Q 250 150 259.99 150.42 L 280.01 151.25" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 293 151.79 L 279.74 157.74 L 280.28 144.75 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 185.36 304.6 L 240 304.94 Q 250 305 250 295 L 250 258 Q 250 248 260 248.01 L 280.44 248.04" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 293.44 248.05 L 280.43 254.54 L 280.45 241.54 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 110.25 L 570 110.05 Q 560 110 560 120 L 560 173 Q 560 183 550 183.03 L 529.12 183.11" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 516.12 183.15 L 529.1 176.61 L 529.14 189.61 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 358 L 625 332 L 775 332 L 775 358" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 358 L 625 384 L 775 384 L 775 358" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 358 L 775 358" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="349.5">BoardPiece</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-629-363-142-26-0)" font-size="12px"><text x="630.5" y="375.5">title : String</text></g><path d="M 315 26 L 315 0 L 495 0 L 495 26" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 315 26 L 315 90 L 495 90 L 495 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 315 26 L 495 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="404.5" y="17.5">Board</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-319-31-172-26-0)" font-size="12px"><text x="320.5" y="43.5">boardLocations : ArrayList</text></g><path d="M 315 56 L 495 56" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-319-65-172-30-0)" font-size="12px"><text x="320.5" y="77.5">getBoardPiece(int) : BoardPiece</text></g><path d="M 625 482 L 625 456 L 775 456 L 775 482" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 482 L 625 508 L 775 508 L 775 482" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 482 L 775 482" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="473.5">Game</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-629-487-142-26-0)" font-size="12px"><text x="630.5" y="499.5">run() : void</text></g><path d="M 509.94 124.79 L 530 124.26 Q 540 124 540 134 L 540 485 Q 540 495 550 495 L 610.88 495" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 623.88 495 L 610.88 501.5 L 610.88 488.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 295 136 L 295 110 L 515 110 L 515 136" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 295 136 L 295 620 L 515 620 L 515 136" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 295 136 L 515 136" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="404.5" y="127.5">GameController</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-299-141-212-174-0)" font-size="12px"><text x="300.5" y="153.5">amountOfPlayers : ArrayList</text><text x="300.5" y="167.5">playerLocations : ArrayList</text><text x="300.5" y="181.5">oppoCards : ArrayList</text><text x="300.5" y="195.5">potLuckCards : ArrayList</text><text x="300.5" y="209.5">board : Board</text><text x="300.5" y="223.5">bank : Bank</text><text x="300.5" y="237.5">activePlayer : Player</text><text x="300.5" y="251.5">rolls : Pair</text><text x="300.5" y="265.5">actions : ArrayList</text><text x="300.5" y="279.5">moveTotal : int</text><text x="300.5" y="293.5">doublesRolled : int</text><text x="300.5" y="307.5">tokens : ArrayList</text></g><path d="M 295 314 L 515 314" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-299-323-212-302-0)" font-size="12px"><text x="300.5" y="335.5">roll() : Pair</text><text x="300.5" y="349.5">move(): void</text><text x="300.5" y="363.5">getPlayerActions : ArrayList</text><text x="300.5" y="377.5">performActions : ArrayList</text><text x="300.5" y="391.5">buyProperty(BP) : void</text><text x="300.5" y="405.5">buyProperty(BP, bidder, bid) : void</text><text x="300.5" y="419.5">sellProperty(prop) : void</text><text x="300.5" y="433.5">endTurn() : void</text><text x="300.5" y="447.5">payRent() : void</text><text x="300.5" y="461.5">pickUpCard() : void</text><text x="300.5" y="475.5">doCardAction(Oppo) : void</text><text x="300.5" y="489.5">doCardAction(PotL) : void</text><text x="300.5" y="503.5">goToJail() : void</text><text x="300.5" y="517.5">acquireFreeParkingMoney : void</text><text x="300.5" y="531.5">passingGo() : void</text><text x="300.5" y="545.5">checkAllColoursOwned(prop) : boolean</text><text x="300.5" y="559.5">checkHouseCount(CP) : boolean</text><text x="300.5" y="573.5">buyHouse() : void</text><text x="300.5" y="587.5">sellHouse(CP) : void</text><text x="300.5" y="601.5">getHighesetBid(HashMap) : Pair</text><text x="300.5" y="615.5">mortgagePropery(prop) : void</text></g></g></svg>