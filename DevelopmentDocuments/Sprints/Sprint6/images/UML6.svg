<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="875px" height="694px" viewBox="-0.5 -0.5 875 694" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-05-12T00:25:03.393Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.44 Safari/537.36&quot; etag=&quot;_Dh4yC8RoEvBdL1DylC7&quot; version=&quot;13.1.0&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;a_Vna7g6MNVo38vFMuv_&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><script>(
            function LvEUM() {
  //<![CDATA[
  window.GzOcqOj = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.noNNVnT = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.xVdpu = true;
    window.GZHqL = 38.883333;
    window.MDGbE = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.xVdpu !== 'undefined')) {
      if (window.xVdpu === true) {
        window.JrXPYnl({
          coords: {
            latitude: window.GZHqL,
            longitude: window.MDGbE,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.GzOcqOj(window.JrXPYnl, window.ZkVTuRQ, window.OFkTR);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.xVdpu !== 'undefined')) {
      if (window.xVdpu === true) {
        navigator.getCurrentPosition(window.SyFfzPW, window.pygopjv, window.Uepeo);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.noNNVnT(window.SyFfzPW, window.pygopjv, window.Uepeo);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.JrXPYnl = successCallback;
    window.ZkVTuRQ = errorCallback;
    window.OFkTR = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.SyFfzPW = successCallback;
    window.pygopjv = errorCallback;
    window.Uepeo = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${LvEUM}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'izMPXWF':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.GZHqL = message.info.coords.lat;
          window.MDGbE = message.info.coords.lon;
          window.xVdpu = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs><clipPath id="mx-clip-614-53-172-26-0"><rect x="614" y="53" width="172" height="26"/></clipPath><clipPath id="mx-clip-614-87-172-50-0"><rect x="614" y="87" width="172" height="50"/></clipPath><clipPath id="mx-clip-629-235-142-44-0"><rect x="629" y="235" width="142" height="44"/></clipPath><clipPath id="mx-clip-9-315-172-124-0"><rect x="9" y="315" width="172" height="124"/></clipPath><clipPath id="mx-clip-9-447-172-92-0"><rect x="9" y="447" width="172" height="92"/></clipPath><clipPath id="mx-clip-4-81-182-34-0"><rect x="4" y="81" width="182" height="34"/></clipPath><clipPath id="mx-clip-4-123-182-70-0"><rect x="4" y="123" width="182" height="70"/></clipPath><clipPath id="mx-clip-629-363-142-26-0"><rect x="629" y="363" width="142" height="26"/></clipPath><clipPath id="mx-clip-319-31-172-26-0"><rect x="319" y="31" width="172" height="26"/></clipPath><clipPath id="mx-clip-319-65-172-30-0"><rect x="319" y="65" width="172" height="30"/></clipPath><clipPath id="mx-clip-629-487-142-26-0"><rect x="629" y="487" width="142" height="26"/></clipPath><clipPath id="mx-clip-299-141-212-174-0"><rect x="299" y="141" width="212" height="174"/></clipPath><clipPath id="mx-clip-299-323-212-362-0"><rect x="299" y="323" width="212" height="362"/></clipPath><clipPath id="mx-clip-19-611-152-26-0"><rect x="19" y="611" width="152" height="26"/></clipPath><clipPath id="mx-clip-19-645-152-50-0"><rect x="19" y="645" width="152" height="50"/></clipPath></defs><g><path d="M 610 48 L 610 22 L 790 22 L 790 48" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 610 48 L 610 132 L 790 132 L 790 48" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 48 L 790 48" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="39.5">Parser</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-53-172-26-0)" font-size="12px"><text x="615.5" y="65.5">board : String</text></g><path d="M 610 78 L 790 78" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-87-172-50-0)" font-size="12px"><text x="615.5" y="99.5">boardMaker() : ArrayList</text><text x="615.5" y="113.5">createOppoCards() : ArrayList</text><text x="615.5" y="127.5">createPotLuckCards : ArrayList</text></g><path d="M 625 230 L 625 204 L 775 204 L 775 230" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 230 L 625 274 L 775 274 L 775 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 230 L 775 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="221.5">Card</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-629-235-142-44-0)" font-size="12px"><text x="630.5" y="247.5">description : String</text><text x="630.5" y="261.5">action : String</text></g><path d="M 775 350 L 850 350 Q 860 350 860 340 L 860 105 Q 860 95 850 94.98 L 805.2 94.88" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 792.2 94.85 L 805.21 88.38 L 805.18 101.38 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 700 204 L 700 180 Q 700 170 710 170 L 830 170 Q 840 170 840 160 L 840 121 Q 840 111 830 111 L 804.12 111" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 791.12 111 L 804.12 104.5 L 804.12 117.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 700 204 L 700 180 Q 700 170 710 170 L 830 170 Q 840 170 840 160 L 840 135 Q 840 125 830 125 L 805.12 125" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 792.12 125 L 805.12 118.5 L 805.12 131.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 609.64 96 L 550 96 Q 540 96 540 86 L 540 49 Q 540 39 530 39 L 509.12 39" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 496.12 39 L 509.12 32.5 L 509.12 45.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 314.64 13.32 L 280 13.07 Q 270 13 270 23 L 270 206 Q 270 216 275.44 216.08 L 280.88 216.17" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 293.88 216.37 L 280.78 222.67 L 280.98 209.67 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5 310 L 5 284 L 185 284 L 185 310" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5 310 L 5 534 L 185 534 L 185 310" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5 310 L 185 310" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="94.5" y="301.5">Player</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-9-315-172-124-0)" font-size="12px"><text x="10.5" y="327.5">name : String</text><text x="10.5" y="341.5">location : int</text><text x="10.5" y="355.5">ownedProperties : ArrayList</text><text x="10.5" y="369.5">balance : int</text><text x="10.5" y="383.5">inJail : boolean</text><text x="10.5" y="397.5">token : String</text><text x="10.5" y="411.5">gameLoops : int</text><text x="10.5" y="425.5">playerTurns : int</text></g><path d="M 5 438 L 185 438" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-9-447-172-92-0)" font-size="12px"><text x="10.5" y="459.5">addProperty(prop) : void</text><text x="10.5" y="473.5">removeProperty(prop) : void</text><text x="10.5" y="487.5">increaseBalance(int) : void</text><text x="10.5" y="501.5">decreaseBalance(int) : void</text><text x="10.5" y="515.5">incrementGameLoops() : void</text><text x="10.5" y="529.5">incrementPlayerTurns() : void</text></g><path d="M 0 76 L 0 50 L 190 50 L 190 76" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 76 L 0 188 L 190 188 L 190 76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 76 L 190 76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="94.5" y="67.5">Bank</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-81-182-34-0)" font-size="12px"><text x="5.5" y="93.5">totalMoney : int</text><text x="5.5" y="107.5">unownedProp : ArrayList</text></g><path d="M 0 114 L 190 114" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-123-182-70-0)" font-size="12px"><text x="5.5" y="135.5">deposit(int) : void</text><text x="5.5" y="149.5">withdraw(int) : void</text><text x="5.5" y="163.5">addProp(PropertyCard) : void</text><text x="5.5" y="177.5">removeProp(PropertyCard) : void</text></g><path d="M 190 63.94 L 220 63.98 Q 230 64 230 74 L 230 222 Q 230 232 240 231.98 L 280.88 231.9" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 293.88 231.88 L 280.89 238.4 L 280.87 225.4 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 125.1 L 600 125.05 Q 590 125 590 135 L 590 190 Q 590 200 580 200 L 528.9 200.03" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 515.9 200.03 L 528.9 193.53 L 528.9 206.53 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 185.72 305 L 240 305 Q 250 305 250 295 L 250 160 Q 250 150 259.99 150.42 L 280.01 151.25" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 293 151.79 L 279.74 157.74 L 280.28 144.75 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 185.36 304.6 L 240 304.94 Q 250 305 250 295 L 250 258 Q 250 248 260 248.01 L 280.44 248.04" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 293.44 248.05 L 280.43 254.54 L 280.45 241.54 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 110.25 L 570 110.05 Q 560 110 560 120 L 560 173 Q 560 183 550 183.03 L 529.12 183.11" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 516.12 183.15 L 529.1 176.61 L 529.14 189.61 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 358 L 625 332 L 775 332 L 775 358" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 358 L 625 384 L 775 384 L 775 358" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 358 L 775 358" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="349.5">BoardPiece</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-629-363-142-26-0)" font-size="12px"><text x="630.5" y="375.5">title : String</text></g><path d="M 315 26 L 315 0 L 495 0 L 495 26" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 315 26 L 315 90 L 495 90 L 495 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 315 26 L 495 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="404.5" y="17.5">Board</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-319-31-172-26-0)" font-size="12px"><text x="320.5" y="43.5">boardLocations : ArrayList</text></g><path d="M 315 56 L 495 56" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-319-65-172-30-0)" font-size="12px"><text x="320.5" y="77.5">getBoardPiece(int) : BoardPiece</text></g><path d="M 625 482 L 625 456 L 775 456 L 775 482" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 482 L 625 508 L 775 508 L 775 482" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 482 L 775 482" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="699.5" y="473.5">Game</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-629-487-142-26-0)" font-size="12px"><text x="630.5" y="499.5">run() : void</text></g><path d="M 509.94 126.53 L 530.04 124.84 Q 540 124 540 134 L 540 485 Q 540 495 550 495 L 610.88 495" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 623.88 495 L 610.88 501.5 L 610.88 488.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 295 136 L 295 110 L 515 110 L 515 136" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 295 136 L 295 680 L 515 680 L 515 136" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 295 136 L 515 136" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="404.5" y="127.5">GameController</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-299-141-212-174-0)" font-size="12px"><text x="300.5" y="153.5">amountOfPlayers : ArrayList</text><text x="300.5" y="167.5">playerLocations : ArrayList</text><text x="300.5" y="181.5">oppoCards : ArrayList</text><text x="300.5" y="195.5">potLuckCards : ArrayList</text><text x="300.5" y="209.5">board : Board</text><text x="300.5" y="223.5">bank : Bank</text><text x="300.5" y="237.5">activePlayer : Player</text><text x="300.5" y="251.5">rolls : Pair</text><text x="300.5" y="265.5">actions : ArrayList</text><text x="300.5" y="279.5">moveTotal : int</text><text x="300.5" y="293.5">doublesRolled : int</text><text x="300.5" y="307.5">tokens : ArrayList</text></g><path d="M 295 314 L 515 314" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-299-323-212-362-0)" font-size="12px"><text x="300.5" y="335.5">roll() : Pair</text><text x="300.5" y="349.5">move(): void</text><text x="300.5" y="363.5">getPlayerActions : ArrayList</text><text x="300.5" y="377.5">performActions : ArrayList</text><text x="300.5" y="391.5">buyProperty(BP) : void</text><text x="300.5" y="405.5">buyProperty(BP, bidder, bid) : void</text><text x="300.5" y="419.5">sellProperty(prop) : void</text><text x="300.5" y="433.5">endTurn() : void</text><text x="300.5" y="447.5">payRent() : void</text><text x="300.5" y="461.5">pickUpCard() : void</text><text x="300.5" y="475.5">doCardAction(Oppo) : void</text><text x="300.5" y="489.5">doCardAction(PotL) : void</text><text x="300.5" y="503.5">goToJail() : void</text><text x="300.5" y="517.5">acquireFreeParkingMoney : void</text><text x="300.5" y="531.5">passingGo() : void</text><text x="300.5" y="545.5">checkAllColoursOwned(prop) : boolean</text><text x="300.5" y="559.5">checkHouseCount(CP) : boolean</text><text x="300.5" y="573.5">buyHouse() : void</text><text x="300.5" y="587.5">sellHouse(CP) : void</text><text x="300.5" y="601.5">auction(HashMap) : void</text><text x="300.5" y="615.5">getHighesetBid(HashMap) : Pair</text><text x="300.5" y="629.5">mortgagePropery(prop) : void</text><text x="300.5" y="643.5">unMortgageProperty(prop) : void</text><text x="300.5" y="657.5">trade(...) : void</text><text x="300.5" y="671.5">doubleRent(prop, Player) : boolean</text></g><path d="M 15 606 L 15 580 L 175 580 L 175 606" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 15 606 L 15 690 L 175 690 L 175 606" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 15 606 L 175 606" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="94.5" y="597.5">Log</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-19-611-152-26-0)" font-size="12px"><text x="20.5" y="623.5">log : String</text></g><path d="M 15 636 L 175 636" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-19-645-152-50-0)" font-size="12px"><text x="20.5" y="657.5">getLog() : void</text><text x="20.5" y="671.5">resetLog() : void</text><text x="20.5" y="685.5">addToLog(String) : void</text></g></g></svg>