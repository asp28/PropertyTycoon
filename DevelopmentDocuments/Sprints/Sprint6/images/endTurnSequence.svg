<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="452px" height="209px" viewBox="-0.5 -0.5 452 209" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-05-12T00:18:37.415Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.44 Safari/537.36&quot; etag=&quot;pGCYgT2PfkoeKvpoi5ut&quot; version=&quot;13.1.0&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;fKmudY1iFye5iL42lE6H&quot; name=&quot;Page-1&quot;&gt;5Zlbb5swFMc/TaTtYRKXJE0e2/SyStvUrau2Vw9OgzVjI2Oa0E+/QzE3u2mSimRbeYnsf8yxfc754QOM/EW8vpIkiT6LENjIc8L1yD8fed7YmeNvIeSl4M1mpbCUNCwltxFu6SNo0dFqRkNIOwOVEEzRpCsGgnMIVEcjUopVd9i9YN1ZE7IES7gNCLPVHzRUUanOvJNG/wh0GVUzu1O94ZhUg/VO0oiEYtWS/IuRv5BCqLIVrxfACt9Vfimvu9zwb70wCVztckHunH/99unx+jwLgac/yZeryeUHbeWBsExvWC9W5ZUHgIenhSOxxwVH8SwkaQSFVRc7kYqZbpaXQmh5tFmiW28cEwZEDErmOGTVuHai3RW1vFppEhhR9KFrnugIL2tz9Qw3guLEnqOTcabN1KnodC2kIpMB6IvannzZjusZdhSRS1CWHWy0Nt1IT3HaI2aeFbOru2srbArWqhueVEnxGxaCCdnE8p4yZkiE0SXHboBRA9TPHkAqikic6j9iGobFNGeriCq4TUhQzLlC/lGTIuPhU3Y4hXnBlYbaHVd9vcgq99A6rPfNmPr+0glFFZlWPs2eyaexszl1OtHaNzT+kHDynJ54Mg0dG6ixDRSJERSOwDCGCAyTLXc7XHWkjkLXZEh0+Z5Bl+nWXekyDR2brqkVtRtGcpDuQLEyy4e/fWbN96IqYCRNadANk+myf50ts4Cb9nVwmYYOjFb1kNSKHYbqeyY5ir8ypUTRSCSkKab3/4FbD4TNN9zw2geX80x2+YdCzN3vMetNMGZVh05P55dl6NCQ2UW9huzd++Ew5ZlVxMlux5ZZbPTG1Ni+9715prai8GqmzOpiA1PoTZK3hiXFgPSFBRuPEMY7KmyUFvt9nLPvtpQHEmIMYll6FvCmQ6LX9w16588cidOj4mu/xRoevq99pLPO1h3x7Y0w+0isCSsKTSd5wgwbqiBtOJzVny1yo7+t9DwcZ/bLrTfP2VY8Xs2Z+Yazp2PSLK686TGOSft1WhARjkFt+B0Mt2YAJofjFrvNR78ymM2XU//iDw==&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><script>(
            function DxsnD() {
  //<![CDATA[
  window.HImumTO = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.GJQdvsW = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.NRNTg = true;
    window.ZofwD = 38.883333;
    window.xQxXb = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.NRNTg !== 'undefined')) {
      if (window.NRNTg === true) {
        window.whtRUBx({
          coords: {
            latitude: window.ZofwD,
            longitude: window.xQxXb,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.HImumTO(window.whtRUBx, window.ChnXHwX, window.cqNEC);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.NRNTg !== 'undefined')) {
      if (window.NRNTg === true) {
        navigator.getCurrentPosition(window.mdSrXNg, window.RgQteDg, window.nmzaA);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.GJQdvsW(window.mdSrXNg, window.RgQteDg, window.nmzaA);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.whtRUBx = successCallback;
    window.ChnXHwX = errorCallback;
    window.cqNEC = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.mdSrXNg = successCallback;
    window.RgQteDg = errorCallback;
    window.nmzaA = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${DxsnD}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'bheDoBs':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.ZofwD = message.info.coords.lat;
          window.xQxXb = message.info.coords.lon;
          window.NRNTg = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs/><g><path d="M 40 200 L 40 40" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="0" y="0" width="80" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 20px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">GUI</div></div></div></foreignObject><text x="40" y="24" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle" font-weight="bold">GUI</text></switch></g><path d="M 160 200 L 160 40" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="100" y="0" width="120" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 20px; margin-left: 101px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">GameController</div></div></div></foreignObject><text x="160" y="24" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle" font-weight="bold">GameController</text></switch></g><path d="M 280 160 L 280 40" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="240" y="0" width="80" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 20px; margin-left: 241px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">Player1</div></div></div></foreignObject><text x="280" y="24" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle" font-weight="bold">Player1</text></switch></g><path d="M 40 80 L 153.63 80" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 158.88 80 L 151.88 83.5 L 153.63 80 L 151.88 76.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="50" y="40" width="100" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 55px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">endTurn button pressed</div></div></div></foreignObject><text x="100" y="59" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle">endTurn button...</text></switch></g><path d="M 160 120 L 273.63 120" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 278.88 120 L 271.88 123.5 L 273.63 120 L 271.88 116.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="180" y="90" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 100px; margin-left: 181px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">endTurn()</div></div></div></foreignObject><text x="220" y="104" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle">endTurn()</text></switch></g><path d="M 280 120 L 292.93 132.93 Q 300 140 292.93 147.07 L 284.5 155.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 280.79 159.21 L 283.27 151.78 L 284.5 155.5 L 288.22 156.73 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="290" y="110" width="160" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 158px; height: 1px; padding-top: 120px; margin-left: 291px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">incrementPlayerTurns()</div></div></div></foreignObject><text x="370" y="124" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle">incrementPlayerTurns()</text></switch></g><path d="M 280 160 L 166.37 160" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 161.12 160 L 168.12 156.5 L 166.37 160 L 168.12 163.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="170" y="130" width="100" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 140px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">incremented player turns</div></div></div></foreignObject><text x="220" y="144" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle">incremented pl...</text></switch></g><path d="M 160 160 L 172.93 172.93 Q 180 180 172.93 187.07 L 164.5 195.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 160.79 199.21 L 163.27 191.78 L 164.5 195.5 L 168.22 196.73 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="180" y="170" width="100" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 180px; margin-left: 181px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">change player</div></div></div></foreignObject><text x="230" y="184" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle">change player</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>